/*
 * Up API
 *
 * The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct WebhookResourceAttributes {
    /// The URL that this webhook is configured to `POST` events to. 
    #[serde(rename = "url")]
    pub url: String,
    /// An optional description that was provided at the time the webhook was created. 
    #[serde(rename = "description", deserialize_with = "Option::deserialize")]
    pub description: Option<String>,
    /// A shared secret key used to sign all webhook events sent to the configured webhook URL. This field is returned only once, upon the initial creation of the webhook. If lost, create a new webhook and delete this webhook.  The webhook URL receives a request with a `X-Up-Authenticity-Signature` header, which is the SHA-256 HMAC of the entire raw request body signed using this `secretKey`. It is advised to compute and check this signature to verify the authenticity of requests sent to the webhook URL. See [Handling webhook events](#callback_post_webhookURL) for full details. 
    #[serde(rename = "secretKey", skip_serializing_if = "Option::is_none")]
    pub secret_key: Option<String>,
    /// The date-time at which this webhook was created. 
    #[serde(rename = "createdAt")]
    pub created_at: String,
}

impl WebhookResourceAttributes {
    pub fn new(url: String, description: Option<String>, created_at: String) -> WebhookResourceAttributes {
        WebhookResourceAttributes {
            url,
            description,
            secret_key: None,
            created_at,
        }
    }
}


