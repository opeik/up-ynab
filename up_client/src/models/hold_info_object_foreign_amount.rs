/*
 * Up API
 *
 * The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// HoldInfoObjectForeignAmount : The foreign currency amount of this transaction while in the `HELD` status. This field will be `null` for domestic transactions. The amount was converted to the AUD amount reflected in the `amount` field. 



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct HoldInfoObjectForeignAmount {
    /// The ISO 4217 currency code. 
    #[serde(rename = "currencyCode")]
    pub currency_code: String,
    /// The amount of money, formatted as a string in the relevant currency. For example, for an Australian dollar value of $10.56, this field will be `\"10.56\"`. The currency symbol is not included in the string. 
    #[serde(rename = "value")]
    pub value: String,
    /// The amount of money in the smallest denomination for the currency, as a 64-bit integer.  For example, for an Australian dollar value of $10.56, this field will be `1056`. 
    #[serde(rename = "valueInBaseUnits")]
    pub value_in_base_units: i32,
}

impl HoldInfoObjectForeignAmount {
    /// The foreign currency amount of this transaction while in the `HELD` status. This field will be `null` for domestic transactions. The amount was converted to the AUD amount reflected in the `amount` field. 
    pub fn new(currency_code: String, value: String, value_in_base_units: i32) -> HoldInfoObjectForeignAmount {
        HoldInfoObjectForeignAmount {
            currency_code,
            value,
            value_in_base_units,
        }
    }
}


